<?xml version="1.0" encoding="UTF-8" ?>
<ContentPage
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:chart="clr-namespace:Syncfusion.SfChart.XForms;assembly=Syncfusion.SfChart.XForms"
    x:Class="FitDeck_CSCI4805.ProfileHomePage">
    <ScrollView BackgroundColor="CornflowerBlue">
        <AbsoluteLayout >
            <StackLayout HorizontalOptions="Center" VerticalOptions="Center">
        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>

            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <!--Logout Button-->
            <Button x:Name="logoutButton" Text="Logout" TextColor="White" FontSize="17" Grid.Column="2" Clicked="logoutButton_Clicked"/>

            <!--View Profile Info-->
            <Frame Padding="30, 30, 30, 0" BorderColor="CornflowerBlue" CornerRadius="10" Grid.ColumnSpan="3" Grid.Row="1">
                 <Grid>
                     <Grid.ColumnDefinitions>
                         <ColumnDefinition Width="*" />
                         <ColumnDefinition Width="*" />
                         <ColumnDefinition Width="*" />
                     </Grid.ColumnDefinitions>
                     <Grid.RowDefinitions>
                         <RowDefinition Height="Auto" />
                         <RowDefinition Height="Auto" />
                         <RowDefinition Height="Auto" />
                         <RowDefinition Height="Auto" />

                     </Grid.RowDefinitions>
                     <Label x:Name="lblUsername" FontSize="20" HorizontalOptions="Center"  Grid.ColumnSpan="3" TextColor="Gray" Grid.Row="1" Grid.Column="0" Padding="0" Margin="0,0,0,20"/>
                     <Label x:Name="lblName" FontSize="35" HorizontalOptions="Center"  Grid.ColumnSpan="3" TextColor="CornflowerBlue" Grid.Row="0" Grid.Column="0" Padding="0" />
                     <Label x:Name="lblEmail" FontSize="20" HorizontalOptions="Center"  Grid.ColumnSpan="3" TextColor="Black" Grid.Row="2" Grid.Column="0" Padding="0" />
                     <Label x:Name="lblAge" FontSize="20" HorizontalOptions="Center" TextColor="CornflowerBlue" Grid.Row="3" Grid.Column="0" />
                     <Label x:Name="lblWeight" FontSize="20" HorizontalOptions="Center"  TextColor="CornflowerBlue" Grid.Row="3" Grid.Column="1"  />
                     <Label x:Name="lblHeight" FontSize="20" HorizontalOptions="Center"  TextColor="CornflowerBlue" Grid.Row="3" Grid.Column="2" />
                 </Grid>

            </Frame>
            <!--View Daily and Weekly Stats-->
            <StackLayout x:Name="statsLayout" BindingContext="{Binding WeeklyStats}" Grid.Row="2" Grid.ColumnSpan="3" >
                <chart:SfChart>
                <chart:SfChart.PrimaryAxis>
                    <chart:CategoryAxis/>
                </chart:SfChart.PrimaryAxis>
                    <chart:SfChart.SecondaryAxis>
                        <chart:NumericalAxis/>
                    </chart:SfChart.SecondaryAxis>
                    <chart:ColumnSeries x:Name="dailyStatsCharts" XBindingPath="Day" YBindingPath="CaloriesBurned"/>
                    </chart:SfChart>
                <Label Text="Daily Stats:" TextColor="White" FontSize="25" FontAttributes="Bold"/>
                <Label Text="Weekly Stats:" TextColor="White" FontSize="25" FontAttributes="Bold"/>
            </StackLayout>
            <!--View Workouts List-->
            <Button x:Name="addWorkoutButton" Text="Add Workout" TextColor="CornflowerBlue" BorderColor="CornflowerBlue" BorderWidth="2" BackgroundColor="White" Grid.Row="3" Grid.Column="0" Clicked="addWorkoutButton_Clicked"></Button>
            <Button x:Name="editWorkoutButton" Text="Edit Workout" TextColor="CornflowerBlue" BorderColor="CornflowerBlue" BorderWidth="2" BackgroundColor="White" Grid.Row="3" Grid.Column="1" Clicked="editWorkoutButton_Clicked" ></Button>
            <Button x:Name="addRestDayButton" Text="Add Rest Day" TextColor="CornflowerBlue" BorderColor="CornflowerBlue" BorderWidth="2" BackgroundColor="White" Grid.Row="3" Grid.Column="2" Clicked="addRestDayButton_Clicked"></Button>
            <Button x:Name="startWorkoutButton" Text="Start a Workout" TextColor="CornflowerBlue" BackgroundColor="White" BorderColor="CornflowerBlue" BorderWidth="3" Grid.Row="4" Grid.ColumnSpan="3" Clicked="startWorkoutButton_Clicked"/>
            <ListView x:Name="workoutsListView" Grid.Row="5" Grid.ColumnSpan="3">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <ViewCell >
                            <Label Text="{Binding workouts}"/>
                        </ViewCell>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
                 
        </Grid>

            <!--Add restday View -->
        <ContentView x:Name="popupDayView" BackgroundColor="CornflowerBlue" Padding="30, 0" IsVisible="false" AbsoluteLayout.LayoutBounds="0, 0, 1, 1" AbsoluteLayout.LayoutFlags="All">
                <StackLayout VerticalOptions="Center" HorizontalOptions="Center">

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />

                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Label Text="Enter the day(s) of the week for the RestDay(s) to appear." TextColor="White" FontSize="25" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"/>
                            <CheckBox x:Name="sundayCheckBox"  Grid.Row="1" Grid.Column="0" Color="White"/>
                            <CheckBox x:Name="mondayCheckBox" Grid.Row="2" Grid.Column="0" Color="White"/>
                            <CheckBox x:Name="tuesdayCheckBox" Grid.Row="3" Grid.Column="0" Color="White"/>
                            <CheckBox x:Name="wednesdayCheckBox" Grid.Row="4" Grid.Column="0" Color="White"/>
                            <CheckBox x:Name="thursdayCheckBox" Grid.Row="5" Grid.Column="0" Color="White"/>
                            <CheckBox x:Name="fridayCheckBox" Grid.Row="6" Grid.Column="0" Color="White"/>
                            <CheckBox x:Name="saturdayCheckBox" Grid.Row="7" Grid.Column="0" Color="White"/>
                            <CheckBox x:Name="anydayCheckBox" Grid.Row="8" Grid.Column="0" Color="White"/>

                            <Label x:Name="sunday" Text="Sunday" TextColor="White" Grid.Row="1" Grid.Column="1"/>
                            <Label x:Name="monday" Text="Monday" TextColor="White" Grid.Row="2" Grid.Column="1"/>
                            <Label x:Name="tuesday" Text="Tuesday" TextColor="White" Grid.Row="3" Grid.Column="1"/>
                            <Label x:Name="wednesday" Text="Wednesday" TextColor="White" Grid.Row="4" Grid.Column="1"/>
                            <Label x:Name="thursday" Text="Thursday" TextColor="White" Grid.Row="5" Grid.Column="1"/>
                            <Label x:Name="friday" Text="Friday" TextColor="White" Grid.Row="6" Grid.Column="1"/>
                            <Label x:Name="saturday" Text="Saturday" TextColor="White" Grid.Row="7" Grid.Column="1"/>
                            <Label x:Name="anyday" Text="Anyday" TextColor="White" Grid.Row="8" Grid.Column="1"/>

                        </Grid>

                        <Button x:Name="addRestDaysButton" Margin="20,0,20,0" Text="Add RestDay(s)" TextColor="White" BackgroundColor="CornflowerBlue" BorderColor="White" Clicked="addRestDaysButton_Clicked" Grid.Row="10" Grid.Column="0" Grid.ColumnSpan="2"></Button>
                    </StackLayout>
            </ContentView>

                <!--Pop up window to trigger editing of workout-->
                 <ContentView x:Name="popupEditWorkoutsView" BackgroundColor="CornflowerBlue" Padding="30, 0" IsVisible="false" AbsoluteLayout.LayoutBounds="0, 0, 1, 1" AbsoluteLayout.LayoutFlags="All">
                    <StackLayout VerticalOptions="Center" HorizontalOptions="Center">

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                             
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Picker x:Name="listOfWorkoutsPicker" Grid.Row="0" Grid.ColumnSpan="2" Title="Select a Workout to Edit/Delete" ItemsSource="{Binding workouts}">
                                
                            </Picker>
                            <Button x:Name="editSpecificWorkoutButton" Grid.Row="1" Grid.Column="0" Text="Edit Workout" TextColor="CornflowerBlue" BackgroundColor="White" Clicked="editSpecificWorkoutButton_Clicked"/>
                            <Button x:Name="deleteWorkoutButton" Grid.Row="1" Grid.Column="1" Text="Delete Workout" TextColor="CornflowerBlue" BackgroundColor="CornflowerBlue" Clicked="deleteWorkoutButton_Clicked"/>

                            
                            <Button x:Name="finishEditingWorkoutButton" Text="Finish Editing Workout" TextColor="CornflowerBlue" BackgroundColor="CornflowerBlue" Clicked="finishEditingWorkoutButton_Clicked"/>

                        </Grid>
                    </StackLayout>
                </ContentView>
                <ContentView x:Name="popupEditSpecificWorkoutView" BackgroundColor="White" Padding="30, 0" IsVisible="false" AbsoluteLayout.LayoutBounds="0, 0, 1, 1" AbsoluteLayout.LayoutFlags="All">
                                <StackLayout VerticalOptions="Center" HorizontalOptions="Center">

                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />

                             
                                        </Grid.RowDefinitions>

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        

                                        <!--Two Titles-->
                                        <Label x:Name="muscleGroupLbl" Text="Muscle Group" TextColor="CornflowerBlue" FontSize="25" Grid.Row="0" Grid.Column="0"/>
                                        <Label x:Name="exerciseTypeLbl" Text="Exercise Type" TextColor="CornflowerBlue" FontSize="25" Grid.Row="0" Grid.Column="1"/>

                                        <!--Picker for bodyparts that will populate specific muscle group based on this selected item-->
                                        <Picker x:Name="muscleGroupPicker" Title="Muscle Group" SelectedIndexChanged="muscleGroupPicker_SelectedIndexChanged" Grid.Row="1" Grid.Column="0">
                                            <Picker.ItemsSource>
                                                <x:Array Type="{x:Type x:String}">
                                                    <x:String>Upper Arms</x:String>
                                                    <x:String>ForeArms</x:String>
                                                    <x:String>Shoulders</x:String>
                                                    <x:String>Hips</x:String>
                                                    <x:String>Chest</x:String>
                                                    <x:String>Back</x:String>
                                                    <x:String>Waist</x:String>
                                                    <x:String>Neck</x:String>
                                                    <x:String>Thighs</x:String>
                                                    <x:String>Calves</x:String>
                                                </x:Array>
                                            </Picker.ItemsSource>
                                        </Picker>
                                        <!--Second Picker for muscle group-->
                                        <Picker x:Name="concentratedMuscleGroupPicker" Title="Specific Muscle Group" Grid.Row="2" Grid.Column="0"/>

                                        <!--Picker that will help narrow down the exercise search by choosing an apparatus-->
                                        <Picker x:Name="apparatusPicker" Title="Apparatus" Grid.Row="3" Grid.Column="0">
                                            <Picker.ItemsSource>
                                                <x:Array Type="{x:Type x:String}">
                                                    <x:String>Band</x:String>
                                                    <x:String>Barbell</x:String>
                                                    <x:String>Bodyweight</x:String>
                                                    <x:String>Cable</x:String>
                                                    <x:String>Dumbbell</x:String>
                                                    <x:String>Lever</x:String>
                                                    <x:String>Machine</x:String>
                                                </x:Array>
                                            </Picker.ItemsSource>
                                        </Picker>

                                        <!--Picker for the type of exercise-->
                                        <Picker x:Name="exerciseTypePicker" Title="Exercise Type" SelectedIndexChanged="exerciseTypePicker_SelectedIndexChanged" Grid.Row="1" Grid.Column="1">
                                            <Picker.ItemsSource>
                                                <x:Array Type="{x:Type x:String}">
                                                    <x:String>Weight Training</x:String>
                                                    <x:String>Plyometrics</x:String>
                                                    <x:String>Stretch</x:String>
                                                    <x:String>Cardio and Conditioning</x:String>
                                                </x:Array>
                                                </Picker.ItemsSource>
                                        </Picker>

                                        <!--Both pickers will populate based on exerciseTypePicker-->
                                        <Picker x:Name="specificTypePicker" Title="Specific Type" Grid.Row="2" Grid.Column="1"/>
                                        <Picker x:Name="intensityPicker" Title="Intensity" Grid.Row="3" Grid.Column="1" IsVisible="false"/>

                                        <!--Button that will trigger the API to populate the list view with search results-->
                                        <Button x:Name="findExercisesButton" Text="Find Exercises" TextColor="White" BackgroundColor="CornflowerBlue" Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" Clicked="findExercisesButton_Clicked"/>

                                        <!--Populated with search results-->
                                        <ListView x:Name="exerciseListView" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="5" ItemSelected="exerciseListView_ItemSelected" HeightRequest="700" RowHeight="125" >
                                            <ListView.ItemTemplate>
                                                <DataTemplate>
                                                    <ViewCell >
                                                        <StackLayout>
                                                            <Grid>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="Auto" />
                                                                    <RowDefinition Height="Auto" />
                                                                    <RowDefinition Height="Auto" />
                                                                </Grid.RowDefinitions>

                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="*" />
                                                                    <ColumnDefinition Width="*" />
                                                                    <ColumnDefinition Width="*" />
                                                                </Grid.ColumnDefinitions>

                                                                <!--Image doesn't show but the labels show the appropriate information from the API-->
                                                                <Image Source="{Binding image}" HorizontalOptions="CenterAndExpand" VerticalOptions="CenterAndExpand" Grid.Column="0" Grid.Row="0"/>
                                                                <Label x:Name="exName" Text="{Binding Exercise_Name}" FontSize="18" Grid.Column="1" FontAttributes="Bold" Grid.Row="0" TextColor="CornflowerBlue" Grid.ColumnSpan="2" />
                                                                <Label x:Name="setupLabel" Text="{Binding Instructions_Preparation}" TextColor="CornflowerBlue" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3"/>
                                                                <Label x:Name="descriptionLabel" Text="{Binding Instructions_Execution}" TextColor="CornflowerBlue" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3"/>

                                                            </Grid>
                                                        </StackLayout>
                            
                                                    </ViewCell>
                                                </DataTemplate>
                                            </ListView.ItemTemplate>
                                        </ListView>
                                        <Button x:Name="finishEditingExercisesButton" Text="Finish Adding Exercises" TextColor="CornflowerBlue" BackgroundColor="CornflowerBlue" Clicked="finishEditingExercisesButton_Clicked"/>

                                    <ListView x:Name="viewWorkout">
                                        <ListView.ItemTemplate>
                                            <DataTemplate>
                                                <ViewCell>
                                                    <Label Text="{Binding Name}" TextColor="CornflowerBlue" />
                                                </ViewCell>
                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                    </ListView>
                                    </Grid>
                                    
                                </StackLayout>
                            </ContentView>
                <ContentView x:Name="popupStartWorkoutView" BackgroundColor="White" Padding="30, 0" IsVisible="false" AbsoluteLayout.LayoutBounds="0, 0, 1, 1" AbsoluteLayout.LayoutFlags="All">
                                <StackLayout VerticalOptions="Center" HorizontalOptions="Center">
                                    <Picker x:Name="workoutToStartPicker" Title="Select a workout to start"/>
                                    <Label x:Name="stopwatchLabel" TextColor="CornflowerBlue"/>
                                    <Button x:Name="startButton" Text="Start Timer" TextColor="White" BackgroundColor="CornflowerBlue" Clicked="startButton_Clicked"/>
                                    <Button x:Name="pauseButton" Text="Pause Timer" TextColor="White" BackgroundColor="CornflowerBlue" Clicked="pauseButton_Clicked"/>
                                    <Button x:Name="stopButton" Text="Stop Timer and End Workout" TextColor="White" BackgroundColor="CornflowerBlue" Clicked="stopButton_Clicked"/>

                                    <ListView x:Name="exerciseListStartWorkoutView" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="5" ItemSelected="exerciseListView_ItemSelected" HeightRequest="700" RowHeight="140" >
                                            <ListView.ItemTemplate>
                                                <DataTemplate>
                                                    <ViewCell >
                                                        <StackLayout>
                                                            <Grid>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="Auto" />
                                                                    <RowDefinition Height="Auto" />
                                                                    <RowDefinition Height="Auto" />
                                                                </Grid.RowDefinitions>

                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="*" />
                                                                    <ColumnDefinition Width="*" />
                                                                    <ColumnDefinition Width="*" />
                                                                </Grid.ColumnDefinitions>

                                                                <!--Image doesn't show but the labels show the appropriate information from the API-->
                                                                <Image Source="{Binding image}" HorizontalOptions="CenterAndExpand" VerticalOptions="CenterAndExpand" Grid.Column="0" Grid.Row="0"/>
                                                                <Label x:Name="exName" Text="{Binding Exercise_Name}" FontSize="18" Grid.Column="1" FontAttributes="Bold" Grid.Row="0" TextColor="CornflowerBlue" Grid.ColumnSpan="2" />
                                                                <Label x:Name="setupLabel" Text="{Binding Instructions_Preparation}" TextColor="CornflowerBlue" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3"/>
                                                                <Label x:Name="descriptionLabel" Text="{Binding Instructions_Execution}" TextColor="CornflowerBlue" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3"/>

                                                            </Grid>
                                                        </StackLayout>
                            
                                                    </ViewCell>
                                                </DataTemplate>
                                            </ListView.ItemTemplate>
                                        </ListView>
                                    </StackLayout>
                            </ContentView>
            </StackLayout>
        </AbsoluteLayout>
    </ScrollView>
</ContentPage>
